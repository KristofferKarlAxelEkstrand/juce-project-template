name: "CodeQL Security Analysis"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '34 3 * * 1'  # Weekly on Monday at 3:34 AM

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp', 'javascript-typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Linux dependencies
      if: matrix.language == 'c-cpp'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxrandr-dev \
          libfreetype6-dev \
          libfontconfig1-dev \
          libgl1-mesa-dev \
          libxext-dev

    - name: Cache JUCE
      if: matrix.language == 'c-cpp'
      uses: actions/cache@v4
      with:
        path: third_party/JUCE
        key: ${{ runner.os }}-juce-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-juce-

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.language == 'c-cpp' && 'manual' || 'none' }}

    - if: matrix.language == 'c-cpp'
      name: Clean build directory
      run: rm -rf build

    - if: matrix.language == 'c-cpp'
      name: Build C++
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"